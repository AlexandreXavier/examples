<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300">

	<fx:Script>
		<![CDATA[
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			
			import org.iotashan.oauth.IOAuthSignatureMethod;
			import org.iotashan.oauth.OAuthConsumer;
			import org.iotashan.oauth.OAuthRequest;
			import org.iotashan.oauth.OAuthToken;
			
			/**
			 * Loads albums when application enters authorized state.
			 */
			public function loadAlbums():void
			{
				// Gettings access token from topLevelApplication
				var accessToken:OAuthToken = FlexGlobals.topLevelApplication.accessToken;
				// Gettings OAuthConsumer from topLevelApplication
				var consumer:OAuthConsumer = FlexGlobals.topLevelApplication.consumer;
				// Gettings IOAuthSignatureMethod from topLevelApplication
				var signature:IOAuthSignatureMethod = FlexGlobals.topLevelApplication.signature;
				
				// Creating OAuthRequest to get users albums list
				var oauthRequest:OAuthRequest = 
					new OAuthRequest(
						OAuthRequest.HTTP_MEHTOD_GET, "https://picasaweb.google.com/data/feed/api/user/default", 
						null, 
						consumer, accessToken
					);
				
				// Creating URLRequest with authorized headers
				var request:URLRequest = new URLRequest(oauthRequest.requestURL);
				request.requestHeaders.push(oauthRequest.buildRequest(signature, OAuthRequest.RESULT_TYPE_HEADER));
				request.method = URLRequestMethod.GET;
				// Content type returned by Googles service
				request.contentType = "application/atom+xml";
				
				// Creating URLLoader to invoke Google service
				var loader:URLLoader = new URLLoader;
				loader.addEventListener(Event.COMPLETE, getAlbums_completeHandler);
				loader.addEventListener(IOErrorEvent.IO_ERROR, getAlbums_ioErrorHandler);
				loader.load(request);
			}
			
			protected function getAlbums_completeHandler(event:Event):void
			{
				// Switching AlbumsView to loaded state
				currentState = "loaded";
				// Defining Atom namespace
				default xml namespace = new Namespace("http://www.w3.org/2005/Atom");
				var contactsXml:XML = XML(URLLoader(event.currentTarget).data);
				// Setting albums list data provider
				lstAlbums.dataProvider = new XMLListCollection(contactsXml.entry.title);
			}
			
			protected function getAlbums_ioErrorHandler(event:IOErrorEvent):void
			{
				// Notifying user about error when getting albums list
				Alert.show("Error getting albums: " + URLLoader(event.currentTarget).data, "Error!");
			}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="loading" />
		<s:State name="loaded" />
	</s:states>
	
	<s:Label text="Loading your albums..." verticalCenter="0" horizontalCenter="0" includeIn="loading" />
	
	<s:List id="lstAlbums" labelField="title" borderVisible="false" width="100%" height="100%"
			itemRenderer="com.riaspace.examples.oauth.views.renderers.AlbumRenderer" includeIn="loaded">
		<s:layout>
			<s:TileLayout columnAlign="justifyUsingGap" verticalGap="20" />
		</s:layout>
	</s:List>

</s:Group>
