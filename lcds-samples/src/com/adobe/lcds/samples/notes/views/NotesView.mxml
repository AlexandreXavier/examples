<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="Notes"
		creationComplete="view_creationCompleteHandler(event)">

	<fx:Script>
		<![CDATA[
			import mx.core.FlexGlobals;
			import mx.data.DataService;
			import mx.data.events.DataConflictEvent;
			import mx.events.FlexEvent;
			import mx.rpc.AsyncToken;
			
			public var noteObj:Object = new Object();
			
			[Bindable]
			public var getToken:AsyncToken;
			
			private var ds:DataService;
			
			protected function view_creationCompleteHandler(event:FlexEvent):void
			{
				ds = new DataService("notes");
				ds.autoCommit = false;
				ds.channelSet = FlexGlobals.topLevelApplication.messagingChannels;
				ds.addEventListener(DataConflictEvent.CONFLICT, function (event:DataConflictEvent):void
				{
					currentState = "conflict";
				});
				
				noteObj.noteId = 1;
				noteObj.noteText = "Type your notes here and share them with other clients!";
				
				getToken = ds.getItem({noteId:noteObj.noteId}, noteObj);
			}
			
			protected function btnOK_clickHandler(event:MouseEvent):void
			{
				ds.conflicts.acceptAllServer();
				currentState = "normal";
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="conflict"/>
	</s:states>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:actionContent>
		<s:Button label="Send" click="ds.commit();"/>
	</s:actionContent>
	
	<s:BorderContainer includeIn="conflict" left="10" top="10" right="10" height="110"
					   cornerRadius="10" backgroundColor="red">
		<s:Label text="Conflicts detected, reverting to server value." 
				 verticalCenter="0" left="20" />
		<s:Button verticalCenter="0" right="20" label="OK" 
				  click="btnOK_clickHandler(event)"/>
	</s:BorderContainer>
	
	<s:TextArea id="log" left="10" right="10" top="10" bottom="10" text="@{getToken.result.noteText}"
				left.conflict="10" right.conflict="10" top.conflict="130" bottom.conflict="10"/>
	
</s:View>
